{"version":3,"sources":["Form.js","App.js","reportWebVitals.js","index.js"],"names":["Form","props","state","name","message","handleSubmit","bind","handleChange","event","inputValue","target","value","stateField","this","setState","console","log","preventDefault","axios","post","onSubmit","type","onChange","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"oQAGqBA,E,kDACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,KAAM,GACNC,QAAS,IAEX,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBAPH,E,yDAUNE,GACX,IAAMC,EAAaD,EAAME,OAAOC,MAC1BC,EAAaJ,EAAME,OAAOP,KAChCU,KAAKC,SAAL,eACGF,EAAaH,IAEhBM,QAAQC,IAAIH,KAAKX,S,4EAEAM,G,8EACjBA,EAAMS,iB,EACoBJ,KAAKX,M,EAAvBC,K,EAAMC,Q,SACRc,IAAMC,KACV,uEAGA,CAAC,SAAW,Q,sIAKd,OACE,8BACE,uBAAMC,SAAUP,KAAKR,aAArB,UACE,0CACA,uBACEgB,KAAK,OACLlB,KAAK,OACLmB,SAAUT,KAAKN,aACfI,MAAOE,KAAKX,MAAMC,OAGpB,6CACA,uBACEkB,KAAK,OACLlB,KAAK,UACLmB,SAAUT,KAAKN,aACfI,MAAOE,KAAKX,MAAME,UAGpB,wBAAQiB,KAAK,SAAb,2B,GAlDwBE,aCWnBC,E,uKATX,OACE,gCACE,0DACA,cAAC,EAAD,W,GALUD,aCSHE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SAajDZ,M","file":"static/js/main.be2c82a3.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nexport default class Form extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      message: '',\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    const inputValue = event.target.value;\n    const stateField = event.target.name;\n    this.setState({\n      [stateField]: inputValue,\n    });\n    console.log(this.state);\n  }\n  async handleSubmit(event) {\n    event.preventDefault();\n    const { name, message } = this.state;\n    await axios.post(\n      ' https://wanwp3l3di.execute-api.ap-south-1.amazonaws.com/Dev/latlong',\n      //'https://i1xsjzkri4.execute-api.us-east-1.amazonaws.com/default/serverlessAppFunction',\n      //{ key1: `${name}` }\n      {\"lat_long\":\"abc\"}\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <label>Name:</label>\n          <input\n            type=\"text\"\n            name=\"name\"\n            onChange={this.handleChange}\n            value={this.state.name}\n          />\n\n          <label>Message:</label>\n          <input\n            type=\"text\"\n            name=\"message\"\n            onChange={this.handleChange}\n            value={this.state.message}\n          />\n\n          <button type=\"submit\">Send</button>\n        </form>\n      </div>\n    );\n  }\n}","import React, { Component } from 'react';\nimport Form from './Form.js';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <h1>Leave your message here:</h1>\n        <Form />\n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import Avatar from './Avatar';\nimport reportWebVitals from './reportWebVitals';\n//import Demo from './Demo';\nReactDOM.render(<App />, document.getElementById('root'));\n/*ReactDOM.render(\n  <div><Avatar/>\n  <Avatar/>\n  <Avatar/>\n  <Avatar/></div>\n  ,document.getElementById('root')\n    \n);\n*/\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}